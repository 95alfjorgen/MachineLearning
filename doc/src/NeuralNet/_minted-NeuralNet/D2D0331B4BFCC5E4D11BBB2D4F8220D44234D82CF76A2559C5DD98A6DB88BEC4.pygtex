\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYGdefault{c+c1}{\PYGdefaultZsh{} building our neural network}

\PYGdefault{n}{n\PYGdefaultZus{}inputs}\PYGdefault{p}{,} \PYGdefault{n}{n\PYGdefaultZus{}features} \PYGdefault{o}{=} \PYGdefault{n}{X\PYGdefaultZus{}train}\PYGdefault{o}{.}\PYGdefault{n}{shape}
\PYGdefault{n}{n\PYGdefaultZus{}hidden\PYGdefaultZus{}neurons} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{50}
\PYGdefault{n}{n\PYGdefaultZus{}categories} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{10}

\PYGdefault{c+c1}{\PYGdefaultZsh{} we make the weights normally distributed using numpy.random.randn}

\PYGdefault{c+c1}{\PYGdefaultZsh{} weights and bias in the hidden layer}
\PYGdefault{n}{hidden\PYGdefaultZus{}weights} \PYGdefault{o}{=} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{random}\PYGdefault{o}{.}\PYGdefault{n}{randn}\PYGdefault{p}{(}\PYGdefault{n}{n\PYGdefaultZus{}features}\PYGdefault{p}{,} \PYGdefault{n}{n\PYGdefaultZus{}hidden\PYGdefaultZus{}neurons}\PYGdefault{p}{)}
\PYGdefault{n}{hidden\PYGdefaultZus{}bias} \PYGdefault{o}{=} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{zeros}\PYGdefault{p}{(}\PYGdefault{n}{n\PYGdefaultZus{}hidden\PYGdefaultZus{}neurons}\PYGdefault{p}{)} \PYGdefault{o}{+} \PYGdefault{l+m+mf}{0.01}

\PYGdefault{c+c1}{\PYGdefaultZsh{} weights and bias in the output layer}
\PYGdefault{n}{output\PYGdefaultZus{}weights} \PYGdefault{o}{=} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{random}\PYGdefault{o}{.}\PYGdefault{n}{randn}\PYGdefault{p}{(}\PYGdefault{n}{n\PYGdefaultZus{}hidden\PYGdefaultZus{}neurons}\PYGdefault{p}{,} \PYGdefault{n}{n\PYGdefaultZus{}categories}\PYGdefault{p}{)}
\PYGdefault{n}{output\PYGdefaultZus{}bias} \PYGdefault{o}{=} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{zeros}\PYGdefault{p}{(}\PYGdefault{n}{n\PYGdefaultZus{}categories}\PYGdefault{p}{)} \PYGdefault{o}{+} \PYGdefault{l+m+mf}{0.01}
\end{Verbatim}
