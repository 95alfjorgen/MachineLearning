TITLE: Applied Data Analysis and Machine Learning: Introduction to the course, Logistics and Practicalities
AUTHOR: Morten Hjorth-Jensen  {copyright, 1999-present|CC BY-NC} at Department of Physics, University of Oslo & Department of Physics and Astronomy and National Superconducting Cyclotron Laboratory, Michigan State University
DATE: today



!split
===== Overview of first week =====

!bblock
  * Thursday: First lecture: Presentation of the course, aims and content
  * Thursday: Second Lecture: Start with simple linear regression and repetition of linear algebra
  * Friday: Linear regression   
  * Computer lab: Tuesday. First time: Tuesday August 27. 
!eblock


!split
===== Lectures and ComputerLab =====

!bblock
  * Lectures: Thursday (12.15pm-2pm) and Friday (12.15pm-2pm).
  * Weekly reading assignments needed to solve projects and exercises.
  * Weekly exercises when not working on projects. You can hand in exercises if you want.
  * First hour of each lab session may be used to discuss technicalities, address questions etc linked with projects and exercises.
  * Detailed lecture notes, exercises, all programs presented, projects etc can be found at the homepage of the course.
  * Computerlab: Tuesday (8am-6pm), VB IT-auditorium 3
  * Weekly plans and all other information are on the official webpage.
  * No final exam, three projects that are graded and have to be approved. 
!eblock




!split
===== Course Format =====

!bblock
  * Three compulsory projects. Electronic reports only using "devilry":"https://devilry.ifi.uio.no/" to hand in projects and "Git":"https://github.com/" for repository and all your material.
  * Evaluation and grading: The three projects are graded and each counts 1/3 of the final mark. No final written or oral exam.
    o For the last project Each group/participant submits a proposal or works with suggested (by us) proposals for the project.
    o If possible, we would like to organize the last project as a workshop where each group makes a poster and presents this to all other participants of the course
    o Poster session where all participants can study and discuss the other proposals.
    o Based on feedback etc, each group finalizes the report and submits for grading. 
  * Python is the default programming language, but feel free to use C/C++ and/or Fortran or other programmin languages. All source codes discussed during the lectures can be found at the webpage and "github address":"https://github.com/CompPhysics/MachineLearning/tree/master/doc/Programs" of the course. 
!eblock




!split
===== Teachers and ComputerLab =====

!bblock

_Teachers :_

o "Hanna Svennevik":"https://www.researchgate.net/profile/Hanna_Svennevik"
o "Morten Hjorth-Jensen":"http://mhjgit.github.io/info/doc/web/"
o "Lucas Charpentier":"https://no.linkedin.com/in/lucas-charpentier-176206171"
o "Stian Bilek":"https://www.researchgate.net/profile/Stian_Bilek"



|------------------------------------------------------|
|      day         |        Time |
|----------------------------------------------------|
| Group 1: Tuesday | 8am-10am |
| Group 2: Tuesday | 10am-12pm |  
| Group 3: Tuesday | 12pm-2pm   | 
| Group 4: Tuesday | 2pm-4pm   | 
|-------------------------------------------------|

!eblock

!split
===== Deadlines for projects (tentative) =====

!bblock

o Project 1: September 30 (graded with feedback)
o Project 2: November 4 (graded with feedback)
o Project 3: December 2  (graded with feedback)

Projects are handed in using devilry.ifi.uio.no. We use Github as repository for codes, benchmark calculations etc. Comments and feedback on projects only via devilry. 

!eblock

8am-10am |
| Group 2: Tuesday | 10am-12pm |  
| Group 3: Tuesday | 12pm-2pm   | 
| Group 4: Tuesday | 2pm-4pm   | 
|-------------------------------------------------|

!eblock

!split
===== Deadlines for projects (end of day) =====

!bblock

o Project 1: October 1 (graded with feedback)
o Project 2: November 5 (graded with feedback)
o Project 3: November 30, tentative (graded with feedback)

Projects are handed in using devilry.ifi.uio.no. We use Github as repository for codes, benchmark calculations etc. Comments and feedback on projects only via devilry. 

!eblock



!split
===== Learning outcomes =====

!bblock
The course introduces a variety of central algorithms and methods essential for studies of data analysis and machine learning. The course is project based and through the various projects, normally three, you will be exposed to fundamental research problems in these fields, with the aim to reproduce state of the art scientific results. You will learn to develop and structure large codes for studying these systems, get acquainted with computing facilities and learn to handle large scientific projects. A good scientific and ethical conduct is emphasized throughout the course. More specifically, after this course you will

* Learn about basic data analysis, Bayesian statistics, Monte Carlo methods, data optimization and machine learning;
* Be capable of extending the acquired knowledge to other systems and cases;
* Have an understanding of central algorithms used in data analysis and machine learning;
* Gain knowledge of central aspects of Monte Carlo methods, Markov chains, Gibbs samplers and their possible applications, from numerical integration to simulation of stock markets;
* Understand linear methods for regression and classification;
* Learn about neural network, genetic algorithms and Boltzmann machines;
* Work on numerical projects to illustrate the theory. The projects play a central role and you are expected to know modern programming languages like Python or C++.

!eblock

!split
===== Topics covered in this course: Statistical analysis and optimization of data =====

!bblock 
The following topics will be covered

* Basic concepts, expectation values, variance, covariance, correlation functions and errors;
* Simpler models, binomial distribution, the Poisson distribution, simple and multivariate normal distributions;
* Central elements of Bayesian statistics and modeling;
* Central elements from linear algebra
* Cubic splines and gradient methods for data optimization
* Monte Carlo methods, Markov chains, Metropolis-Hastings algorithm, ergodicity;
* Linear methods for regression and classification;
* Estimation of errors using blocking, bootstrapping and jackknife methods;
!eblock


!split
===== Topics covered in this course: Machine Learning =====

!bblock 
* Linear and non-linear regression 
* Gaussian and Dirichlet processes;
* Boltzmann machines;
* Neural networks;
* Decisions trees and nearest neighbor algorithms
* Support vector machines

!eblock

!split
===== Extremely useful tools, strongly recommended =====

!bblock and discussed at the lab sessions
  * GIT for version control (see webpage)
  * ipython/jupyter notebook
  * Devilry for handing in projects, next week
  * Anaconda and other Python environments
!eblock

